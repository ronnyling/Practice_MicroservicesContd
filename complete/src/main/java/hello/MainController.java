package hello;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.converter.StringHttpMessageConverter;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.client.RestTemplate;

import hello.User;
import hello.UserRepository;

import java.io.IOException;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	@Autowired
	private SalesRecordRepository salesRecordRepository;
	RestTemplate restTemplate = new RestTemplate();

	//restTemplate.getMessageConverters().add(new StringHttpMessageConverter());
	
	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		
		User n = new User();
		n.setName(name);
		n.setEmail(email);
		userRepository.save(n);
		return "Saved";
	}
	
	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
	@GetMapping(path="/test")
	@Autowired
	public @ResponseBody String sample() {
		// This returns a JSON or XML with the users
		String url ="http://localhost:8080/rankingProfile/{uri}";
		try {
			restTemplate.getMessageConverters().add(new StringHttpMessageConverter());
			String result = restTemplate.getForObject(url, String.class,"task1");
			return result;
		}catch (NullPointerException e){
			return "Caught nothing";
		}

	}

	@GetMapping(path="/salesrecord/{staffMember}")
	public @ResponseBody SalesRecord getSalesRecord(@PathVariable String staffMember) throws IOException {
		try{
			SalesRecord salesRec;
			salesRec = salesRecordRepository.getSalesRecord(staffMember);
			return (salesRec);
		}catch(NullPointerException e){
			return null;
		}
		//
	}

}
